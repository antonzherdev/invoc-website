Parameters:
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    MinLength: 40
    MaxLength: 40
    AllowedPattern: '[a-z0-9]*'

  GitHubOwner:
    Type: String
    Default: antonzherdev
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubRepo:
    Type: String
    Default: invoc-website
    AllowedPattern: "[A-Za-z0-9-]+"

  GitHubBranch:
    Type: String
    Default: master
    AllowedPattern: "[A-Za-z0-9-]+"

  Suffix:
    Type: String
  Domain:
    Type: String

Resources:
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub pipeline-website-${Suffix}

  S3Front:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub ${Domain}
      AccessControl: PublicRead
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicAcls: false
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html

  S3FrontPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: S3FrontPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${S3Front}/*'
      Bucket: !Ref S3Front


  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStores:
        - Region: !Sub ${AWS::Region}
          ArtifactStore:
            Type: S3
            Location: !Ref PipelineBucket
        - Region: us-east-1
          ArtifactStore:
            Type: S3
            Location: !Sub "pipeline-front-us-${Suffix}"
      RestartExecutionOnUpdate: true
      Name: !Sub pipeline-website-${Suffix}
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: !Ref GitHubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CloudFormationDeploy
              Region: us-east-1
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceCode
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: "CAPABILITY_IAM,CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND"
                RoleArn: !GetAtt CloudformationRole.Arn
                StackName: !Sub website-${Suffix}
                ParameterOverrides: !Sub |
                  {
                    "Domain": "${Domain}",
                    "Suffix": "${Suffix}"
                  }
                TemplatePath: !Sub "SourceCode::template.yaml"
                OutputFileName: cf-front.json
              OutputArtifacts:
                - Name: CloudFormationArtifact
              RunOrder: 1

            - Name: DeployS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: BuildArtifact
              Configuration:
                BucketName: !Sub ${Domain}
                Extract: true
              RunOrder: 1

            - Name: UzipCloudFrontOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              InputArtifacts:
                - Name: CloudFormationArtifact
              Configuration:
                BucketName: !Ref PipelineBucket
                Extract: true
              RunOrder: 2

            - Name: InvalidateCloudFront
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              InputArtifacts:
                - Name: CloudFormationArtifact
              Configuration:
                FunctionName: "invalidate_cloudfront"
                UserParameters: !Ref PipelineBucket
              RunOrder: 3


  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub project-website-${Suffix}
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ARTIFACT_S3_BUCKET
            Value: !Ref PipelineBucket
          - Name: SUFFIX
            Value: !Ref Suffix
      Artifacts:
        Name: BuildArtifact
        Type: CODEPIPELINE

  # 'GithubWebhook' satisfies two requirements:
  # -- Means that updates are pushed from GitHub, rather than AWS having to poll
  # -- Means we can filter for required changes
  GithubWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitHubOAuthToken
      RegisterWithThirdParty: 'true'
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}
      TargetPipeline: !Ref CodePipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt CodePipeline.Version


  ##########################################################
  # Roles
  ##########################################################
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub pipeline-website-${Suffix}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub codebuild-website-${Suffix}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions

  CloudformationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub formation-website-${Suffix}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess #TODO: Reduce permissions
